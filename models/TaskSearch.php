<?php
/**
 * Created by PhpStorm.
 * User: tag19
 * Date: 10.04.2019
 * Time: 9:22 PM
 */

namespace app\models;

use Yii;
use yii\data\ActiveDataProvider;

class TaskSearch extends Task
{
    public function rules() {
        return  [
            [['id'], 'integer'],
            [['name'], 'string'],
            [['description'], 'string'],
            [['start_date'], 'date'],
            [['estimate_date'],'date'],
            [['used_time'],'integer'],
            [['status_id'],'integer'],
            [['priority_id'],'integer'],
            [['sprint_id'],'integer'],
        ];
    }
//    public function scenarios()
//    {
//        return parent::scenarios(); // TODO: Change the autogenerated stub
//    }
    public function search($params) {
        //$query = Sprint::findBySql("SELECT Sprint.id, Sprint.start_date, Sprint.project_id FROM Sprint, Projects WHERE Projects.user_id=" . Yii::$app->user->identity->getId());
        $query = Task::find()->joinWith('sprint')->where(['project_id' => $params['id']]);
        //$query = Task::findBySql("SELECT * FROM Task");
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);

        if (!$this->validate()) {
            return $dataProvider;
        }

        $query->andFilterWhere([
            'id' => $this->getAttribute('id'),
            'name' => $this->getAttribute('name'),
            'description' => $this->getAttribute('description'),
            'start_date' => $this->getAttribute('start_date'),
            'estimate_date' => $this->getAttribute('estimate_date'),
            'used_time' => $this->getAttribute('used_time'),
            'status_id' => $this->getAttribute('status_id'),
            'priority_id' => $this->getAttribute('priority_id'),
            'sprint_id' => $this->getAttribute('sprint_id'),

        ]);

        return $dataProvider;
    }
}